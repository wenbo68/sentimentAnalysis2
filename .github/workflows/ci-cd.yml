name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      IMAGE_NAME: sentiment-analysis-image
      TAG_NAME: ${{ github.sha }}  # Use the commit SHA as the Docker tag
      CONTAINER_NAME: sentiment-analysis-container
      CONTAINER_PORT: 80
      SERVER_PORT: 8080

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      # - name: Install Dependencies in github actions runner env (only needed if you want to test in this env before building docker image)
      #   run: |
      #     python -m pip install --upgrade pip
      #     pip install -r app/requirements.txt

      # - name: Run Tests
      #   run: pytest  # add your tests if you have any

      - name: Build Docker Image
        run: docker build -t $IMAGE_NAME .

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker Image to Docker Hub
        run: |
          docker tag $IMAGE_NAME ${{ secrets.DOCKER_USER }}/$IMAGE_NAME:$TAG_NAME
          docker push ${{ secrets.DOCKER_USER }}/$IMAGE_NAME:$TAG_NAME

      - name: Set permissions on testKeyPair1.pem
        run: chmod 400 testKeyPair1.pem

      - name: Add EC2 instance to known hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.PUBLIC_DNS }} >> ~/.ssh/known_hosts

      - name: SSH into EC2 and run Docker container
        run: |
          ssh -i testKeyPair1.pem ${{ secrets.SERVER_USERNAME }}@${{ secrets.PUBLIC_DNS }} << 'EOF'
          docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_PASSWORD }}  # Optional if private repo
          docker stop $CONTAINER_NAME
          docker rm $CONTAINER_NAME
          docker run -d --name $CONTAINER_NAME -p $SERVER_PORT:$CONTAINER_PORT ${{ secrets.DOCKER_USER }}/$IMAGE_NAME:$TAG_NAME
          EOF